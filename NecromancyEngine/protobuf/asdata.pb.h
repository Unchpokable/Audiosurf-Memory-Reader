// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: asdata.proto
// Protobuf C++ Version: 4.25.1

#ifndef GOOGLE_PROTOBUF_INCLUDED_asdata_2eproto_2epb_2eh
#define GOOGLE_PROTOBUF_INCLUDED_asdata_2eproto_2epb_2eh

#include <limits>
#include <string>
#include <type_traits>
#include <utility>

#include "google/protobuf/port_def.inc"
#if PROTOBUF_VERSION < 4025000
#error "This file was generated by a newer version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please update"
#error "your headers."
#endif  // PROTOBUF_VERSION

#if 4025001 < PROTOBUF_MIN_PROTOC_VERSION
#error "This file was generated by an older version of protoc which is"
#error "incompatible with your Protocol Buffer headers. Please"
#error "regenerate this file with a newer version of protoc."
#endif  // PROTOBUF_MIN_PROTOC_VERSION
#include "google/protobuf/port_undef.inc"
#include "google/protobuf/io/coded_stream.h"
#include "google/protobuf/arena.h"
#include "google/protobuf/arenastring.h"
#include "google/protobuf/generated_message_tctable_decl.h"
#include "google/protobuf/generated_message_util.h"
#include "google/protobuf/metadata_lite.h"
#include "google/protobuf/generated_message_reflection.h"
#include "google/protobuf/message.h"
#include "google/protobuf/repeated_field.h"  // IWYU pragma: export
#include "google/protobuf/extension_set.h"  // IWYU pragma: export
#include "google/protobuf/unknown_field_set.h"
// @@protoc_insertion_point(includes)

// Must be included last.
#include "google/protobuf/port_def.inc"

#define PROTOBUF_INTERNAL_EXPORT_asdata_2eproto

namespace google {
namespace protobuf {
namespace internal {
class AnyMetadata;
}  // namespace internal
}  // namespace protobuf
}  // namespace google

// Internal implementation detail -- do not use these members.
struct TableStruct_asdata_2eproto {
  static const ::uint32_t offsets[];
};
extern const ::google::protobuf::internal::DescriptorTable
    descriptor_table_asdata_2eproto;
class ASScanData;
struct ASScanDataDefaultTypeInternal;
extern ASScanDataDefaultTypeInternal _ASScanData_default_instance_;
namespace google {
namespace protobuf {
}  // namespace protobuf
}  // namespace google


// ===================================================================


// -------------------------------------------------------------------

class ASScanData final :
    public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:ASScanData) */ {
 public:
  inline ASScanData() : ASScanData(nullptr) {}
  ~ASScanData() override;
  template<typename = void>
  explicit PROTOBUF_CONSTEXPR ASScanData(::google::protobuf::internal::ConstantInitialized);

  inline ASScanData(const ASScanData& from)
      : ASScanData(nullptr, from) {}
  ASScanData(ASScanData&& from) noexcept
    : ASScanData() {
    *this = ::std::move(from);
  }

  inline ASScanData& operator=(const ASScanData& from) {
    CopyFrom(from);
    return *this;
  }
  inline ASScanData& operator=(ASScanData&& from) noexcept {
    if (this == &from) return *this;
    if (GetArena() == from.GetArena()
  #ifdef PROTOBUF_FORCE_COPY_IN_MOVE
        && GetArena() != nullptr
  #endif  // !PROTOBUF_FORCE_COPY_IN_MOVE
    ) {
      InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }

  inline const ::google::protobuf::UnknownFieldSet& unknown_fields() const
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.unknown_fields<::google::protobuf::UnknownFieldSet>(::google::protobuf::UnknownFieldSet::default_instance);
  }
  inline ::google::protobuf::UnknownFieldSet* mutable_unknown_fields()
      ABSL_ATTRIBUTE_LIFETIME_BOUND {
    return _internal_metadata_.mutable_unknown_fields<::google::protobuf::UnknownFieldSet>();
  }

  static const ::google::protobuf::Descriptor* descriptor() {
    return GetDescriptor();
  }
  static const ::google::protobuf::Descriptor* GetDescriptor() {
    return default_instance().GetMetadata().descriptor;
  }
  static const ::google::protobuf::Reflection* GetReflection() {
    return default_instance().GetMetadata().reflection;
  }
  static const ASScanData& default_instance() {
    return *internal_default_instance();
  }
  static inline const ASScanData* internal_default_instance() {
    return reinterpret_cast<const ASScanData*>(
               &_ASScanData_default_instance_);
  }
  static constexpr int kIndexInFileMessages =
    0;

  friend void swap(ASScanData& a, ASScanData& b) {
    a.Swap(&b);
  }
  inline void Swap(ASScanData* other) {
    if (other == this) return;
  #ifdef PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() != nullptr &&
        GetArena() == other->GetArena()) {
   #else  // PROTOBUF_FORCE_COPY_IN_SWAP
    if (GetArena() == other->GetArena()) {
  #endif  // !PROTOBUF_FORCE_COPY_IN_SWAP
      InternalSwap(other);
    } else {
      ::google::protobuf::internal::GenericSwap(this, other);
    }
  }
  void UnsafeArenaSwap(ASScanData* other) {
    if (other == this) return;
    ABSL_DCHECK(GetArena() == other->GetArena());
    InternalSwap(other);
  }

  // implements Message ----------------------------------------------

  ASScanData* New(::google::protobuf::Arena* arena = nullptr) const final {
    return CreateMaybeMessage<ASScanData>(arena);
  }
  using ::google::protobuf::Message::CopyFrom;
  void CopyFrom(const ASScanData& from);
  using ::google::protobuf::Message::MergeFrom;
  void MergeFrom( const ASScanData& from) {
    ASScanData::MergeImpl(*this, from);
  }
  private:
  static void MergeImpl(::google::protobuf::Message& to_msg, const ::google::protobuf::Message& from_msg);
  public:
  PROTOBUF_ATTRIBUTE_REINITIALIZES void Clear() final;
  bool IsInitialized() const final;

  ::size_t ByteSizeLong() const final;
  const char* _InternalParse(const char* ptr, ::google::protobuf::internal::ParseContext* ctx) final;
  ::uint8_t* _InternalSerialize(
      ::uint8_t* target, ::google::protobuf::io::EpsCopyOutputStream* stream) const final;
  int GetCachedSize() const { return _impl_._cached_size_.Get(); }

  private:
  ::google::protobuf::internal::CachedSize* AccessCachedSize() const final;
  void SharedCtor(::google::protobuf::Arena* arena);
  void SharedDtor();
  void InternalSwap(ASScanData* other);

  private:
  friend class ::google::protobuf::internal::AnyMetadata;
  static ::absl::string_view FullMessageName() {
    return "ASScanData";
  }
  protected:
  explicit ASScanData(::google::protobuf::Arena* arena);
  ASScanData(::google::protobuf::Arena* arena, const ASScanData& from);
  public:

  static const ClassData _class_data_;
  const ::google::protobuf::Message::ClassData*GetClassData() const final;

  ::google::protobuf::Metadata GetMetadata() const final;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  enum : int {
    kArrayDataFieldNumber = 2,
    kScoreFieldNumber = 1,
    kRowsFieldNumber = 3,
    kColsFieldNumber = 4,
    kGoldThresholdFieldNumber = 5,
  };
  // repeated float array_data = 2;
  int array_data_size() const;
  private:
  int _internal_array_data_size() const;

  public:
  void clear_array_data() ;
  float array_data(int index) const;
  void set_array_data(int index, float value);
  void add_array_data(float value);
  const ::google::protobuf::RepeatedField<float>& array_data() const;
  ::google::protobuf::RepeatedField<float>* mutable_array_data();

  private:
  const ::google::protobuf::RepeatedField<float>& _internal_array_data() const;
  ::google::protobuf::RepeatedField<float>* _internal_mutable_array_data();

  public:
  // float score = 1;
  void clear_score() ;
  float score() const;
  void set_score(float value);

  private:
  float _internal_score() const;
  void _internal_set_score(float value);

  public:
  // int32 rows = 3;
  void clear_rows() ;
  ::int32_t rows() const;
  void set_rows(::int32_t value);

  private:
  ::int32_t _internal_rows() const;
  void _internal_set_rows(::int32_t value);

  public:
  // int32 cols = 4;
  void clear_cols() ;
  ::int32_t cols() const;
  void set_cols(::int32_t value);

  private:
  ::int32_t _internal_cols() const;
  void _internal_set_cols(::int32_t value);

  public:
  // int32 gold_threshold = 5;
  void clear_gold_threshold() ;
  ::int32_t gold_threshold() const;
  void set_gold_threshold(::int32_t value);

  private:
  ::int32_t _internal_gold_threshold() const;
  void _internal_set_gold_threshold(::int32_t value);

  public:
  // @@protoc_insertion_point(class_scope:ASScanData)
 private:
  class _Internal;

  friend class ::google::protobuf::internal::TcParser;
  static const ::google::protobuf::internal::TcParseTable<
      3, 5, 0,
      0, 2>
      _table_;
  friend class ::google::protobuf::MessageLite;
  friend class ::google::protobuf::Arena;
  template <typename T>
  friend class ::google::protobuf::Arena::InternalHelper;
  using InternalArenaConstructable_ = void;
  using DestructorSkippable_ = void;
  struct Impl_ {

        inline explicit constexpr Impl_(
            ::google::protobuf::internal::ConstantInitialized) noexcept;
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena);
        inline explicit Impl_(::google::protobuf::internal::InternalVisibility visibility,
                              ::google::protobuf::Arena* arena, const Impl_& from);
    ::google::protobuf::RepeatedField<float> array_data_;
    float score_;
    ::int32_t rows_;
    ::int32_t cols_;
    ::int32_t gold_threshold_;
    mutable ::google::protobuf::internal::CachedSize _cached_size_;
    PROTOBUF_TSAN_DECLARE_MEMBER
  };
  union { Impl_ _impl_; };
  friend struct ::TableStruct_asdata_2eproto;
};

// ===================================================================




// ===================================================================


#ifdef __GNUC__
#pragma GCC diagnostic push
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// -------------------------------------------------------------------

// ASScanData

// float score = 1;
inline void ASScanData::clear_score() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.score_ = 0;
}
inline float ASScanData::score() const {
  // @@protoc_insertion_point(field_get:ASScanData.score)
  return _internal_score();
}
inline void ASScanData::set_score(float value) {
  _internal_set_score(value);
  // @@protoc_insertion_point(field_set:ASScanData.score)
}
inline float ASScanData::_internal_score() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.score_;
}
inline void ASScanData::_internal_set_score(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.score_ = value;
}

// repeated float array_data = 2;
inline int ASScanData::_internal_array_data_size() const {
  return _internal_array_data().size();
}
inline int ASScanData::array_data_size() const {
  return _internal_array_data_size();
}
inline void ASScanData::clear_array_data() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.array_data_.Clear();
}
inline float ASScanData::array_data(int index) const {
  // @@protoc_insertion_point(field_get:ASScanData.array_data)
  return _internal_array_data().Get(index);
}
inline void ASScanData::set_array_data(int index, float value) {
  _internal_mutable_array_data()->Set(index, value);
  // @@protoc_insertion_point(field_set:ASScanData.array_data)
}
inline void ASScanData::add_array_data(float value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _internal_mutable_array_data()->Add(value);
  // @@protoc_insertion_point(field_add:ASScanData.array_data)
}
inline const ::google::protobuf::RepeatedField<float>& ASScanData::array_data() const
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_list:ASScanData.array_data)
  return _internal_array_data();
}
inline ::google::protobuf::RepeatedField<float>* ASScanData::mutable_array_data()
    ABSL_ATTRIBUTE_LIFETIME_BOUND {
  // @@protoc_insertion_point(field_mutable_list:ASScanData.array_data)
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  return _internal_mutable_array_data();
}
inline const ::google::protobuf::RepeatedField<float>& ASScanData::_internal_array_data()
    const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.array_data_;
}
inline ::google::protobuf::RepeatedField<float>* ASScanData::_internal_mutable_array_data() {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return &_impl_.array_data_;
}

// int32 rows = 3;
inline void ASScanData::clear_rows() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.rows_ = 0;
}
inline ::int32_t ASScanData::rows() const {
  // @@protoc_insertion_point(field_get:ASScanData.rows)
  return _internal_rows();
}
inline void ASScanData::set_rows(::int32_t value) {
  _internal_set_rows(value);
  // @@protoc_insertion_point(field_set:ASScanData.rows)
}
inline ::int32_t ASScanData::_internal_rows() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.rows_;
}
inline void ASScanData::_internal_set_rows(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.rows_ = value;
}

// int32 cols = 4;
inline void ASScanData::clear_cols() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.cols_ = 0;
}
inline ::int32_t ASScanData::cols() const {
  // @@protoc_insertion_point(field_get:ASScanData.cols)
  return _internal_cols();
}
inline void ASScanData::set_cols(::int32_t value) {
  _internal_set_cols(value);
  // @@protoc_insertion_point(field_set:ASScanData.cols)
}
inline ::int32_t ASScanData::_internal_cols() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.cols_;
}
inline void ASScanData::_internal_set_cols(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.cols_ = value;
}

// int32 gold_threshold = 5;
inline void ASScanData::clear_gold_threshold() {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  _impl_.gold_threshold_ = 0;
}
inline ::int32_t ASScanData::gold_threshold() const {
  // @@protoc_insertion_point(field_get:ASScanData.gold_threshold)
  return _internal_gold_threshold();
}
inline void ASScanData::set_gold_threshold(::int32_t value) {
  _internal_set_gold_threshold(value);
  // @@protoc_insertion_point(field_set:ASScanData.gold_threshold)
}
inline ::int32_t ASScanData::_internal_gold_threshold() const {
  PROTOBUF_TSAN_READ(&_impl_._tsan_detect_race);
  return _impl_.gold_threshold_;
}
inline void ASScanData::_internal_set_gold_threshold(::int32_t value) {
  PROTOBUF_TSAN_WRITE(&_impl_._tsan_detect_race);
  ;
  _impl_.gold_threshold_ = value;
}

#ifdef __GNUC__
#pragma GCC diagnostic pop
#endif  // __GNUC__

// @@protoc_insertion_point(namespace_scope)


// @@protoc_insertion_point(global_scope)

#include "google/protobuf/port_undef.inc"

#endif  // GOOGLE_PROTOBUF_INCLUDED_asdata_2eproto_2epb_2eh
